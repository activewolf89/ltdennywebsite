function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var call = function call(fn) {
  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }

  console.warn(['[styled-tools] `call` is deprecated.', 'Please use `withProp` instead.', 'See https://github.com/diegohaz/styled-tools#withprop'].join(' '));
  return function () {
    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    return fn.apply(undefined, _toConsumableArray(args.map(function (arg) {
      return typeof arg === 'function' ? arg(props) : arg;
    })));
  };
};

export default call;